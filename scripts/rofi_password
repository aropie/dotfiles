#!/bin/bash
KB_USERNAME="Ctrl+L"
KB_OTP="Ctrl+O"

clean_surrounding_quotes() {
  # Taken from https://stackoverflow.com/a/9733456/5891130
  input=$(cat) # This is done to capture stdin into a variable
  temp="${input%\"}"
  echo "${temp#\"}"
}

rofi_menu() {
  actions=(
    -kb-custom-1 $KB_USERNAME
    -kb-custom-2 $KB_OTP
  )
  msg="<b>$KB_USERNAME</b>: Get username | <b>$KB_OTP</b>: Generate OTP"
  rofi -dmenu -p "Account" \
    -i -hide-scrollbar \
    -no-custom \
    -display-columns 1 \
    -sort -sorting-method fzf \
    -sync \
    -mesg "$msg" \
    "${actions[@]}"
}

list_accounts() {
  op item list --categories login --format json | jq -c '.[] | "\(.tags[0])/\(.title)\t\(.id)"' -r
}

get_field() {
  op item get $1 --field $2 | clean_surrounding_quotes | tr -d '\n' | xclip -selection clipboard
  notify-send -t 1500 "1Password" "$2 copied to clipboard"
}

get_otp() {
  op item get $1 --otp | tr -d '\n' | xclip -selection clipboard
  notify-send -t 1500 "1Password" "OTP copied to clipboard"
}

# if [[ $(pgrep 1password) -eq 1 ]]; then
#     notify-send -t 1500 "1Password" "1Password needs to be running to access the vault"
#     exit
# fi

account_selection=$(list_accounts | rofi_menu)
rofi_exit_code=$?

account_id=$(echo -en "${account_selection}" | awk -F ' ' '{print $NF}')
if [[ -z $account_id ]]; then
  exit
fi

case $rofi_exit_code in
  10) get_field $account_id Username ;;
  11) get_otp $account_id ;;
  *) get_field $account_id Password ;;
esac
